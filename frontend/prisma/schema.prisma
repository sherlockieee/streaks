generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider          = "postgresql"
    url               = env("POSTGRES_PRISMA_URL")
    directUrl         = env("POSTGRES_URL_NON_POOLING")
}

model Habit {
    id                        String          @id @default(cuid())
    title                     String
    createdAt                 DateTime        @default(now()) @map("created_at")
    updatedAt                 DateTime        @default(now()) @updatedAt @map("updated_at")
    freezeLimit               Int             @default(2) @map("freeze_limit")
    minimumTime               Int             @default(1) @map("minimum_time")
    requireEvidence           Boolean         @default(true) @map("require_evidence")
    allowStreakFreeze         Boolean         @default(true) @map("allow_streak_freeze")
    consecutiveDaysOffAllowed Boolean         @default(true) @map("consecutive_days_off_allowed")
    habitProgress             HabitProgress[]

    @@map("habits")
}

model HabitProgress {
    id                 String              @id @default(cuid())
    habitId            String              @map("habit_id")
    minutes            Int                 @default(0)
    createdAt          DateTime            @default(now()) @map("created_at")
    completed          Boolean             @default(false)
    lastCompletedAt    DateTime?           @map("last_completed_date")
    currentStreakCount Int                 @default(0) @map("current_streak_count")
    status             HabitProgressStatus @default(NOT_DONE_YET)
    habit              Habit               @relation(fields: [habitId], references: [id])
}

enum HabitProgressStatus {
    SUCCESS
    NOT_DONE_YET
    FAIL_FREEZE
    FAIL_CONSECUTIVE_DAY_OFFS
}
